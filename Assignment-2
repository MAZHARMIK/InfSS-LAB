#include<stdio.h>
#include<string.h>

char Scytale[100][100];

//Creating the Scytale Cipher
void MakeScytale(char Message[], int key, int column)
{
    int i, j, k=0 ;
    for(i=0; i<key; i++)
    {
        for(j=0; j<column; j++)
        {
            if(Message[k]==' ')
            {
                k++;
                Scytale[i][j] = Message[k++];
            }
            else
                Scytale[i][j] = Message[k++];
        }
    }
}

int SpaceCount(char Message[])
{
    int i, sum=0;
    for(i=0; Message[i]!='\0'; i++)
    {
        if(Message[i]==' ')
            sum++;
    }
    return sum;
}

//Encryption Scheme
void EncryptedMessage(int key, int column)
{
    int i, j;

    for(i=0; i<key; i++)
    {
        for(j=0; j<column; j++)
        {
            printf("%c", Scytale[i][j]);
        }
    }
    printf("\n");
}

//Decryption Scheme
void DecryptedMessage()
{
    int i, j;

    for(i=0; i<5; i++)
    {
        for(j=0; j<4; j++)
        {
            printf("%c", Scytale[j][i]);
        }
    }
    printf("\n");
}

//Driver Function
int main()
{
    char Message[100];
    int key;
    
    printf("Enter the message: ");
    scanf("%[^\n]c", Message);
    
    printf("\nEnter the key Size: ");
    scanf("%d", &key);

    int length = strlen(Message);
    int space = SpaceCount(Message);
	int column = (length-space)/key;
    MakeScytale(Message, key, column);

	printf("CYPHER TEXT: ");
	
    DecryptedMessage();
    

return 0;
}
