#include<stdio.h>
#define size 8

void swap(int *a, int *b)
{
	int temp;
	temp = *a;
	*a = *b;
	*b = temp;
}

int main()
{
	int S[size], T[size], i, j, keylen, temp;
	printf("Enter the key-length: ");
	scanf("%d", &keylen);
	int K[keylen];
	printf("Enter the key elements: ");
	for(i=0; i<keylen; i++)
	{
		scanf("%d", &K[i]);
	}	
	
	int plaintext[4] = {1, 2, 2, 2};
	printf("This is the plaintext: ");
	for(i=0; i<4; i++)
	{
		printf("%d ", plaintext[i]);
	}
	for(i=0; i<size; i++)
	{
		S[i] = i;
		T[i] = K[i%keylen];
	}
	j = 0;
	for(i=0; i<size; i++)
	{
		j = (j+S[i] + T[i]) % size;
		swap(&S[i], &S[j]);
	}

	printf("\nThis is the initial permutation of S : \n");
	for(i=0; i<size; i++)
	{
		printf("%d ", S[i]);
	}
	printf("\n");
	
	i = 0, j = 0;
	int  z = 0, kvalue[4], k_var = 0, encrypted[4], t , k, i_new;
	int final = 5;
	while(final)
	{
		 z++;
		 i = (i + 1) % size;
		 j = (j + S[i]) % size;
		 swap(&S[i], &S[j]);
		 t = (S[i] + S[j]) % size;
		 k = S[t];
		 kvalue[k_var] = k;
		 encrypted[k_var] = plaintext[k_var]^k;
		 k_var++;
		 if(z==4)
		 {
		 	printf("This is the encrypted text: \n");
		 	for(i_new=0; i_new<4; i_new++)
			{
				printf("%d ", encrypted[i_new]);
			}
			printf("\n");
			z = 0;
			k_var = 0;
			final--;
		}
	}
return 0;
}
